name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install docker-compose

      - name: Build and run docker-compose
        run: |
          docker-compose -f docker-compose-gh-actions.yaml build --no-cache --force-rm
          docker-compose -f docker-compose-gh-actions.yaml up -d
      - name: Apply alembic migrations
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web alembic upgrade head
      - name: Code check - Black
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web black src
      - name: Code check - Isort
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web isort --profile black src
      - name: Code check - MyPy
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web mypy .
      - name: Code lint - Ruff
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web ruff .
      - name: Tests
        run: |
          docker-compose -f docker-compose-gh-actions.yaml exec -T web pytest -v
